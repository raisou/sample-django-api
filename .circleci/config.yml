version: 2.1

jobs:
  build-and-test:
    working_directory: ~/app
    docker:
      - image: cimg/python:3.8
      - image: circleci/postgres:13
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
    steps:
      - checkout
      # Cache can be tricky at first, but this means
      # Please, restore my cache (what is actually on the cache will be defined later)
      # if the text key `deps-{{ checksum "poetry.lock" }}` changes (and it WILL change everytime poetry.lock is updated since we rely on its checksum)
      # and poetry.lock is updated every time we add a new dependency to our project
      - restore_cache:
          keys:
            - deps-{{ checksum "poetry.lock" }}

      - run:
          name: Install Dependencies
          command: |
            poetry install

      # Save's the specified path as a cache. This is the path Poetry uses to install the dependencies
      # So if you don't install anything new, this folder won't change and the cache will be effective
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

      - run:
          name: Run tests
          environment:
            TEST_POSTGRES_SERVER: 127.0.0.1
          command: |
            poetry run python manage.py test --settings sample_api.settings.tests

workflows:
  main:
    jobs:
      - build-and-test
